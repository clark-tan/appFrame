{"version":3,"sources":["../../src/pages/examplePages/light-http-page/light-http-page.module.ts","../../src/pages/examplePages/light-http-page/light-http-page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAyC;AACO;AACE;AACyB;AAa3E;IAAA;IAAmC,CAAC;IAAvB,mBAAmB;QAX/B,uEAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,uEAAa;aACd;YACD,OAAO,EAAE;gBACP,sEAAe,CAAC,QAAQ,CAAC,uEAAa,CAAC;gBACvC,yFAAc;aAEf;YACD,OAAO,EAAE,CAAC,uEAAa,CAAC;SACzB,CAAC;OACW,mBAAmB,CAAI;IAAD,0BAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;AChBU;AACe;AACV;AACV;AAOrC;IAEI,uBACW,OAAsB,EACtB,SAAoB,EACnB,IAAU;QAFX,YAAO,GAAP,OAAO,CAAe;QACtB,cAAS,GAAT,SAAS,CAAW;QACnB,SAAI,GAAJ,IAAI,CAAM;IAGtB,CAAC;IAED;;;;OAIG;IACI,+BAAO,GAAd,UAAe,MAAW;QACtB,yBAAyB;QACzB,EAAE,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,MAAM,IAAI,MAAM,CAAC,QAAQ,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC;YAC3D,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;QACpD,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;QACnD,CAAC;IACL,CAAC;IAED;;;;;OAKG;IACI,2BAAG,GAAV,UAAW,GAAW,EAAE,MAAW;QAAnC,iBAKC;QAJG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC;aACxC,SAAS,EAAE;aACX,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC;aACxB,KAAK,CAAC,aAAG,IAAI,YAAI,CAAC,WAAW,CAAC,GAAG,CAAC,EAArB,CAAqB,CAAC,CAAC;IAC7C,CAAC;IAED;;;;;OAKG;IACI,4BAAI,GAAX,UAAY,GAAW,EAAE,MAAW;QAApC,iBAKC;QAJG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,MAAM,CAAC;aAC7B,SAAS,EAAE;aACX,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC;aACxB,KAAK,CAAC,aAAG,IAAI,YAAI,CAAC,WAAW,CAAC,GAAG,CAAC,EAArB,CAAqB,CAAC,CAAC;IAC7C,CAAC;IAED;;;;OAIG;IACK,qCAAa,GAArB,UAAsB,GAAa;QAC/B,IAAI,IAAI,GAAG,GAAG,CAAC,OAAO,CAAC,CAAC;QACxB,mCAAmC;QACnC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;YACP,MAAM,CAAC;gBACH,IAAI,EAAE,GAAG,CAAC,IAAI,EAAE,CAAC,IAAI,IAAI,EAAE;gBAC3B,IAAI,EAAE,GAAG,CAAC,IAAI,EAAE,CAAC,IAAI,IAAI,EAAE;gBAC3B,OAAO,EAAE,GAAG,CAAC,IAAI,EAAE,CAAC,OAAO,IAAI,EAAE;gBACjC,UAAU,EAAE,GAAG,CAAC,UAAU;gBAC1B,MAAM,EAAE,GAAG,CAAC,MAAM;gBAClB,OAAO,EAAE,IAAI;aAChB;QACL,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,MAAM,CAAC;gBACH,IAAI,EAAE,GAAG,CAAC,IAAI,EAAE,CAAC,IAAI,IAAI,EAAE;gBAC3B,IAAI,EAAE,GAAG,CAAC,IAAI,EAAE,CAAC,IAAI,IAAI,EAAE;gBAC3B,OAAO,EAAE,GAAG,CAAC,IAAI,EAAE,CAAC,OAAO,IAAI,EAAE;gBACjC,UAAU,EAAE,GAAG,CAAC,UAAU;gBAC1B,MAAM,EAAE,GAAG,CAAC,MAAM;gBAClB,OAAO,EAAE,IAAI;aAChB;QACL,CAAC;IACL,CAAC;IAED;;;;OAIG;IACK,mCAAW,GAAnB,UAAoB,KAAK;QACrB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACnB,IAAI,GAAG,GAAG,MAAM,CAAC;QACjB,EAAE,CAAC,CAAC,KAAK,CAAC,MAAM,IAAI,GAAG,CAAC,CAAC,CAAC;YACtB,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QAC1B,CAAC;QACD,EAAE,CAAC,CAAC,KAAK,CAAC,MAAM,IAAI,GAAG,CAAC,CAAC,CAAC;YACtB,OAAO,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;QAC/B,CAAC;QACD,EAAE,CAAC,CAAC,KAAK,CAAC,MAAM,IAAI,GAAG,CAAC,CAAC,CAAC;YACtB,OAAO,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;QAC9B,CAAC;QACD,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACnB,MAAM,CAAC,EAAE,OAAO,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;IACxC,CAAC;IAGD;;;;OAIG;IACH,gCAAQ,GAAR;QACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;YAChB,MAAM,EAAE,KAAK;YACb,GAAG,EAAE,mEAAmE;YACxE,IAAI,EAAE;gBACF,MAAM,EAAE,kCAAkC;gBAC1C,QAAQ,EAAE,OAAO;aACpB;SACJ,CAAC,CAAC,IAAI,CAAC,cAAI;YACR,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACtB,CAAC,CAAC,CAAC;IAEP,CAAC;IAtHQ,aAAa;QAJzB,wEAAS,CAAC;YACP,QAAQ,EAAE,iBAAiB;WACQ;SACtC,CAAC;6EAImC;YACX,6DAAS;YACb,IAAI;OALb,aAAa,CAwHzB;IAAD,CAAC;AAAA;SAxHY,aAAa,qB","file":"4.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { LightHttpPage } from './light-http-page';\nimport { LightOutModule } from '../../../light/light-out/light-out.module';\n\n@NgModule({\n  declarations: [\n    LightHttpPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(LightHttpPage),\n    LightOutModule\n\n  ],\n  exports: [LightHttpPage]\n})\nexport class LightHttpPageModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/examplePages/light-http-page/light-http-page.module.ts","import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams } from 'ionic-angular';\nimport { Http, Response } from '@angular/http';\nimport 'rxjs/add/operator/toPromise';\n\n@IonicPage()\n@Component({\n    selector: 'light-http-page',\n    templateUrl: 'light-http-page.html'\n})\nexport class LightHttpPage {\n\n    constructor(\n        public navCtrl: NavController,\n        public navParams: NavParams,\n        private http: Http\n    ) {\n\n    }\n\n    /**\n     * 统一发送请求\n     * @param params\n     * @returns {Promise<{success: boolean, msg: string}>|Promise<R>}\n     */\n    public request(params: any): any {\n        // POST请求（参数、返回值类型都是任意类型）\n        if (params['method'] == 'post' || params['method'] == 'POST') {\n            return this.post(params['url'], params['data']);\n        } else { // 其他请求\n            return this.get(params['url'], params['data']);\n        }\n    }\n\n    /**\n     * get请求\n     * @param url 接口地址\n     * @param params 参数\n     * @returns {Promise<R>|Promise<U>}\n     */\n    public get(url: string, params: any): any {\n        return this.http.get(url, { search: params })\n            .toPromise()\n            .then(this.handleSuccess)\n            .catch(res => this.handleError(res));\n    }\n\n    /**\n     * post请求\n     * @param url 接口地址\n     * @param params 参数\n     * @returns {Promise<R>|Promise<U>}\n     */\n    public post(url: string, params: any) {\n        return this.http.post(url, params)\n            .toPromise()\n            .then(this.handleSuccess)\n            .catch(res => this.handleError(res));\n    }\n\n    /**\n     * 处理请求成功\n     * @param res\n     * @returns {{data: (string|null|((node:any)=>any)}}\n     */\n    private handleSuccess(res: Response) {\n        let body = res[\"_body\"];\n        // console.log(\"接口返回的成功信息：\" + body)\n        if (body) { // 有数据返回\n            return {\n                data: res.json().data || {}, // 返回内容\n                code: res.json().code || {}, // 返回code\n                message: res.json().message || {}, // 返回信息\n                statusText: res.statusText,\n                status: res.status,\n                success: true\n            }\n        } else { // 无数据返回\n            return {\n                data: res.json().data || {}, // 返回内容\n                code: res.json().code || {}, // 返回code\n                message: res.json().message || {}, // 返回信息\n                statusText: res.statusText,\n                status: res.status,\n                success: true\n            }\n        }\n    }\n\n    /**\n     * 处理请求错误\n     * @param error\n     * @returns {void|Promise<string>|Promise<T>|any}\n     */\n    private handleError(error) {\n        console.log(error);\n        let msg = '请求失败';\n        if (error.status == 400) {\n            console.log('请求参数正确');\n        }\n        if (error.status == 404) {\n            console.error('请检查路径是否正确');\n        }\n        if (error.status == 500) {\n            console.error('请求的服务器错误');\n        }\n        console.log(error);\n        return { success: false, msg: msg };\n    }\n\n\n    /**\n     * 注册\n     * @param user\n     * @returns {any}\n     */\n    reguster() {\n        return this.request({\n            method: 'get',\n            url: 'http://218.25.36.152:10003/Map_DelegateTaskInfo/GetTaskRegionInfo',\n            data: {\n                taskID: '908FC567E91A448D9A0F4CC9DCA29AF6',\n                _sysName: '超级管理员'\n            },\n        }).then(data => {\n            console.log(data);\n        });\n\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/examplePages/light-http-page/light-http-page.ts"],"sourceRoot":""}